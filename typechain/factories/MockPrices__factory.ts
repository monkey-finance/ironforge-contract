/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockPrices } from "../MockPrices";

export class MockPrices__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: MockPricesLibraryAddresses,
    signer?: Signer
  ) {
    super(_abi, MockPrices__factory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(
    linkLibraryAddresses: MockPricesLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1cc4d8ad35c4e5444e1120de58c2894ed7\\$__", "g"),
      linkLibraryAddresses["__$1cc4d8ad35c4e5444e1120de58c2894ed7$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _stalePeriod: BigNumberish,
    overrides?: Overrides
  ): Promise<MockPrices> {
    return super.deploy(_stalePeriod, overrides || {}) as Promise<MockPrices>;
  }
  getDeployTransaction(
    _stalePeriod: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_stalePeriod, overrides || {});
  }
  attach(address: string): MockPrices {
    return super.attach(address) as MockPrices;
  }
  connect(signer: Signer): MockPrices__factory {
    return super.connect(signer) as MockPrices__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPrices {
    return new Contract(address, _abi, signerOrProvider) as MockPrices;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stalePeriod",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "symbol",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "FUSD",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sourceKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "sourceAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "destKey",
        type: "bytes32",
      },
    ],
    name: "exchange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "currencyKey",
        type: "bytes32",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "currencyKey",
        type: "bytes32",
      },
    ],
    name: "isFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "currencyKey",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isFrozen",
        type: "bool",
      },
    ],
    name: "setFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "currencyKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "currencyKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updateTime",
        type: "uint256",
      },
    ],
    name: "setPriceAndTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stalePeriod",
        type: "uint256",
      },
    ],
    name: "setStalePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161090d38038061090d8339818101604052602081101561003357600080fd5b50516000556108c6806100476000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806310d8d74d1461007d57806312d85f42146100a2578063238afcc5146100bc57806331d98b3f146100ed5780637264a0361461010a578063a6f4ab2e1461012f578063ee52a2f31461014c578063f53b71d814610175575b600080fd5b6100a06004803603604081101561009357600080fd5b508035906020013561019e565b005b6100aa61026f565b60408051918252519081900360200190f35b6100d9600480360360208110156100d257600080fd5b503561027a565b604080519115158252519081900360200190f35b6100aa6004803603602081101561010357600080fd5b5035610292565b6100a06004803603604081101561012057600080fd5b508035906020013515156102a4565b6100a06004803603602081101561014557600080fd5b5035610322565b6100aa6004803603606081101561016257600080fd5b5080359060208101359060400135610327565b6100a06004803603606081101561018b57600080fd5b508035906020810135906040013561044c565b6101a78261027a565b156101f6576040805162461bcd60e51b815260206004820152601a60248201527927b930b1b632a937baba32b91d10383934b1b290333937bd32b760311b604482015290519081900360640190fd5b6040805160608082018352838252426020808401828152600085870181815289825260018085529188902096518755915190860155516002909401805460ff1916941515949094179093558351868152928301859052828401529151600080516020610850833981519152929181900390910190a15050565b63119554d160e21b81565b60009081526001602052604090206002015460ff1690565b600061029d8261051e565b5192915050565b6102ac61082c565b50600082815260016020818152604080842081516060808201845282548252828601805483870190815260028501805460ff81161515868901528751948501885294518452905183880190815299151595830195865299909752949093529251909255925190915551151560ff19909116179055565b600055565b600061033161082c565b61033a8561051e565b905061034461082c565b61034d8461051e565b905061035c8260200151610604565b15801561037357506103718160200151610604565b155b6103c4576040805162461bcd60e51b815260206004820152601d60248201527f4d6f636b5072696365733a207374616c65642070726963652064617461000000604482015290519081900360640190fd5b6103f66040518060400160405280600c81526020016b026b7b1b5a83934b1b2b99d160a51b815250836000015161060e565b6104286040518060400160405280600c81526020016b026b7b1b5a83934b1b2b99d160a51b815250826000015161060e565b80518251610442919061043c9088906106c0565b906106dc565b9695505050505050565b6104558361027a565b156104a4576040805162461bcd60e51b815260206004820152601a60248201527927b930b1b632a937baba32b91d10383934b1b290333937bd32b760311b604482015290519081900360640190fd5b60408051606080820183528482526020808301858152600084860181815289825260018085529187902095518655915190850155516002909301805460ff191693151593909317909255825186815291820185905242828401529151600080516020610850833981519152929181900390910190a1505050565b61052661082c565b63119554d160e21b82146105725760008281526001602081815260409283902083516060810185528154815292810154918301919091526002015460ff161515918101919091526105fe565b604051806060016040528073__$1cc4d8ad35c4e5444e1120de58c2894ed7$__63907af6c06040518163ffffffff1660e01b815260040160206040518083038186803b1580156105c157600080fd5b505af41580156105d5573d6000803e3d6000fd5b505050506040513d60208110156105eb57600080fd5b5051815242602082015260006040909101525b92915050565b6000544291011090565b6106bc82826040516024018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610659578181015183820152602001610641565b50505050905090810190601f1680156106865780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905293506106f192505050565b5050565b60006106d58383670de0b6b3a7640000610712565b9392505050565b60006106d58383670de0b6b3a7640000610749565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080600a8304610723868661076f565b8161072a57fe5b0490506005600a825b061061073d57600a015b600a9004949350505050565b6000806107638461075d87600a870261076f565b906107c8565b90506005600a82610733565b60008261077e575060006105fe565b8282028284828161078b57fe5b04146106d55760405162461bcd60e51b81526004018080602001828103825260218152602001806108706021913960400191505060405180910390fd5b600080821161081b576040805162461bcd60e51b815260206004820152601a602482015279536166654d6174683a206469766973696f6e206279207a65726f60301b604482015290519081900360640190fd5b81838161082457fe5b049392505050565b60405180606001604052806000815260200160008152602001600015158152509056febcd10d64fce9dcf9568572ed92e371df336d32649e8960a045c9548794a44b26536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220b3ed36ffd14a0d59c09c7876ada25e32930a377b7ace79a19bcce8c205a81a2564736f6c634300060c0033";

export interface MockPricesLibraryAddresses {
  ["__$1cc4d8ad35c4e5444e1120de58c2894ed7$__"]: string;
}
