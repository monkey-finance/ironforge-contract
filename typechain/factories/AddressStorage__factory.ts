/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AddressStorage } from "../AddressStorage";

export class AddressStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<AddressStorage> {
    return super.deploy(overrides || {}) as Promise<AddressStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AddressStorage {
    return super.attach(address) as AddressStorage;
  }
  connect(signer: Signer): AddressStorage__factory {
    return super.connect(signer) as AddressStorage__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressStorage {
    return new Contract(address, _abi, signerOrProvider) as AddressStorage;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldCandidate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newCandidate",
        type: "address",
      },
    ],
    name: "CandidateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "StorageAddressUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "__AdminUpgradeable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "addressMap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "becomeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "candidate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "getAddressWithRequire",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_candidate",
        type: "address",
      },
    ],
    name: "setCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "names",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "destinations",
        type: "address[]",
      },
    ],
    name: "updateAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610aee806100206000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c8063046624271461009e578063075a78401461015e57806307880b7f1461018457806321f8a721146101aa57806325971dff146101e35780634ae2ffc0146101eb5780636c8381f814610217578063768911da1461021f578063b7dfc97914610294578063c4d66de8146102b1578063f851a440146102d7575b600080fd5b61015c600480360360408110156100b457600080fd5b810190602081018135600160201b8111156100ce57600080fd5b8201836020820111156100e057600080fd5b803590602001918460208302840111600160201b8311171561010157600080fd5b919390929091602081019035600160201b81111561011e57600080fd5b82018360208201111561013057600080fd5b803590602001918460208302840111600160201b8311171561015157600080fd5b5090925090506102df565b005b61015c6004803603602081101561017457600080fd5b50356001600160a01b031661045f565b61015c6004803603602081101561019a57600080fd5b50356001600160a01b03166105ad565b6101c7600480360360208110156101c057600080fd5b503561065e565b604080516001600160a01b039092168252519081900360200190f35b61015c610679565b61015c6004803603604081101561020157600080fd5b50803590602001356001600160a01b0316610723565b6101c7610863565b6101c76004803603604081101561023557600080fd5b81359190810190604081016020820135600160201b81111561025657600080fd5b82018360208201111561026857600080fd5b803590602001918460018302840111600160201b8311171561028957600080fd5b509092509050610872565b6101c7600480360360208110156102aa57600080fd5b50356108e6565b61015c600480360360208110156102c757600080fd5b50356001600160a01b0316610901565b6101c76109ac565b6000546201000090046001600160a01b0316331461032e5760405162461bcd60e51b81526004018080602001828103825260418152602001806109f96041913960600191505060405180910390fd5b82811461037d576040805162461bcd60e51b8152602060048201526018602482015277092dce0eae840d8cadccee8d0e640daeae6e840dac2e8c6d60431b604482015290519081900360640190fd5b60005b838110156104585782828281811061039457fe5b905060200201356001600160a01b0316603260008787858181106103b457fe5b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600080516020610a6b83398151915285858381811061040857fe5b9050602002013584848481811061041b57fe5b905060200201356001600160a01b031660405180838152602001826001600160a01b031681526020019250505060405180910390a1600101610380565b5050505050565b600054610100900460ff168061047857506104786109c1565b80610486575060005460ff16155b6104c15760405162461bcd60e51b815260040180806020018281038252602e815260200180610a8b602e913960400191505060405180910390fd5b600054610100900460ff161580156104ec576000805460ff1961ff0019909116610100171660011790555b6001600160a01b038216610547576040805162461bcd60e51b815260206004820152601e60248201527f41646d696e5570677261646561626c653a207a65726f20616464726573730000604482015290519081900360640190fd5b6000805462010000600160b01b031916620100006001600160a01b03851690810291909117825560408051928352602083019190915280516000805160206109d98339815191529281900390910190a180156105a9576000805461ff00191690555b5050565b6000546201000090046001600160a01b031633146105fc5760405162461bcd60e51b81526004018080602001828103825260418152602001806109f96041913960600191505060405180910390fd5b600180546001600160a01b038381166001600160a01b0319831617928390556040805192821680845293909116602083015280517f7f730391c4f0fa1bea34bcb9bff8c30a079b21a0359759160cb990648ab84c729281900390910190a15050565b6000908152603260205260409020546001600160a01b031690565b6001546001600160a01b031633146106c25760405162461bcd60e51b8152600401808060200182810382526031815260200180610a3a6031913960400191505060405180910390fd5b600080546001546001600160a01b039081166201000090810262010000600160b01b03198416179384905560408051938290048316808552919094049091166020830152825190926000805160206109d9833981519152928290030190a150565b6000546201000090046001600160a01b031633146107725760405162461bcd60e51b81526004018080602001828103825260418152602001806109f96041913960600191505060405180910390fd5b816107bc576040805162461bcd60e51b81526020600482015260156024820152746e616d652063616e206e6f7420626520656d70747960581b604482015290519081900360640190fd5b6001600160a01b03811661080d576040805162461bcd60e51b81526020600482015260136024820152720616464726573732063616e6e6f74206265203606c1b604482015290519081900360640190fd5b60008281526032602090815260409182902080546001600160a01b0319166001600160a01b0385169081179091558251858152918201528151600080516020610a6b833981519152929181900390910190a15050565b6001546001600160a01b031681565b6000838152603260205260408120546001600160a01b03168383826108db5760405162461bcd60e51b815260206004820190815260248201839052908190604401848480828437600083820152604051601f909101601f19169092018290039550909350505050fd5b509095945050505050565b6032602052600090815260409020546001600160a01b031681565b600054610100900460ff168061091a575061091a6109c1565b80610928575060005460ff16155b6109635760405162461bcd60e51b815260040180806020018281038252602e815260200180610a8b602e913960400191505060405180910390fd5b600054610100900460ff1615801561098e576000805460ff1961ff0019909116610100171660011790555b6109978261045f565b80156105a9576000805461ff00191690555050565b6000546201000090046001600160a01b031681565b60006109cc306109d2565b15905090565b3b15159056fe7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f41646d696e5570677261646561626c653a206f6e6c792074686520636f6e74726163742061646d696e2063616e20706572666f726d207468697320616374696f6e41646d696e5570677261646561626c653a206f6e6c792063616e6469646174652063616e206265636f6d652061646d696ec4377493effe961187873838bd3731307f7f558c661681598f57c5d85831e8b3496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220e64940c24ecdf688336871236b194cfe0d459463ddc36a90a3e4e7faff9f393264736f6c634300060c0033";
