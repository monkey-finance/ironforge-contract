/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IConfigInterface extends ethers.utils.Interface {
  functions: {
    "getBuildRatio(bytes32)": FunctionFragment;
    "getUint(bytes32)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getBuildRatio",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "getUint", values: [BytesLike]): string;

  decodeFunctionResult(
    functionFragment: "getBuildRatio",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getUint", data: BytesLike): Result;

  events: {};
}

export class IConfig extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IConfigInterface;

  functions: {
    getBuildRatio(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getBuildRatio(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getUint(key: BytesLike, overrides?: CallOverrides): Promise<[BigNumber]>;

    "getUint(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  getBuildRatio(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

  "getBuildRatio(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUint(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

  "getUint(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    getBuildRatio(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBuildRatio(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUint(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getUint(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    getBuildRatio(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBuildRatio(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUint(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getUint(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getBuildRatio(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBuildRatio(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUint(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUint(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
