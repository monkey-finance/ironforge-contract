/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IAssetSystemInterface extends ethers.utils.Interface {
  functions: {
    "isAsset(address)": FunctionFragment;
    "isForbidden(bytes32)": FunctionFragment;
    "setForbidAsset(bytes32,bool)": FunctionFragment;
    "totalAssetsInUsd()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "isAsset", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isForbidden",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setForbidAsset",
    values: [BytesLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "totalAssetsInUsd",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "isAsset", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isForbidden",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setForbidAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalAssetsInUsd",
    data: BytesLike
  ): Result;

  events: {};
}

export class IAssetSystem extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IAssetSystemInterface;

  functions: {
    isAsset(asset: string, overrides?: CallOverrides): Promise<[boolean]>;

    "isAsset(address)"(
      asset: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isForbidden(name: BytesLike, overrides?: CallOverrides): Promise<[boolean]>;

    "isForbidden(bytes32)"(
      name: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    setForbidAsset(
      name: BytesLike,
      forbid: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setForbidAsset(bytes32,bool)"(
      name: BytesLike,
      forbid: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    totalAssetsInUsd(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { total: BigNumber }>;

    "totalAssetsInUsd()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { total: BigNumber }>;
  };

  isAsset(asset: string, overrides?: CallOverrides): Promise<boolean>;

  "isAsset(address)"(
    asset: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isForbidden(name: BytesLike, overrides?: CallOverrides): Promise<boolean>;

  "isForbidden(bytes32)"(
    name: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  setForbidAsset(
    name: BytesLike,
    forbid: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setForbidAsset(bytes32,bool)"(
    name: BytesLike,
    forbid: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  totalAssetsInUsd(overrides?: CallOverrides): Promise<BigNumber>;

  "totalAssetsInUsd()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    isAsset(asset: string, overrides?: CallOverrides): Promise<boolean>;

    "isAsset(address)"(
      asset: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isForbidden(name: BytesLike, overrides?: CallOverrides): Promise<boolean>;

    "isForbidden(bytes32)"(
      name: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setForbidAsset(
      name: BytesLike,
      forbid: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setForbidAsset(bytes32,bool)"(
      name: BytesLike,
      forbid: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    totalAssetsInUsd(overrides?: CallOverrides): Promise<BigNumber>;

    "totalAssetsInUsd()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    isAsset(asset: string, overrides?: CallOverrides): Promise<BigNumber>;

    "isAsset(address)"(
      asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isForbidden(name: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "isForbidden(bytes32)"(
      name: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setForbidAsset(
      name: BytesLike,
      forbid: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setForbidAsset(bytes32,bool)"(
      name: BytesLike,
      forbid: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    totalAssetsInUsd(overrides?: CallOverrides): Promise<BigNumber>;

    "totalAssetsInUsd()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    isAsset(
      asset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isAsset(address)"(
      asset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isForbidden(
      name: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isForbidden(bytes32)"(
      name: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setForbidAsset(
      name: BytesLike,
      forbid: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setForbidAsset(bytes32,bool)"(
      name: BytesLike,
      forbid: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    totalAssetsInUsd(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalAssetsInUsd()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
